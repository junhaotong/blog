{
    "version": 3,
    "sources": [
        "../../../src/logic/front/captchas.js"
    ],
    "names": [
        "Geetest",
        "require",
        "think",
        "captcha",
        "geetest_id",
        "config",
        "geetest_key",
        "module",
        "exports",
        "Logic",
        "indexAction",
        "register",
        "then",
        "data",
        "success",
        "session",
        "catch",
        "err",
        "fail"
    ],
    "mappings": "AAAA;AACA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AAEAC,MAAMC,OAAN,GAAgB,IAAIH,OAAJ,CAAY;AACxBI,gBAAYF,MAAMG,MAAN,CAAa,YAAb,CADY;AAExBC,iBAAaJ,MAAMG,MAAN,CAAa,aAAb;AAFW,CAAZ,CAAhB;;AAMAE,OAAOC,OAAP,GAAiB,cAAcN,MAAMO,KAApB,CAA0B;AACvCC,kBAAc;AACV,eAAOR,MAAMC,OAAN,CAAcQ,QAAd,CAAuB,IAAvB,EACFC,IADE,CACGC,QAAQ;AACV,gBAAI,CAACA,KAAKC,OAAV,EAAmB;AACf;AACA;AACA;AACA;AACA,qBAAKC,OAAL,CAAa,UAAb,EAAyB,IAAzB;AACA,uBAAO,KAAKD,OAAL,CAAaD,IAAb,CAAP;AACA;AACA;AACH,aATD,MASO;AACH;AACA,qBAAKE,OAAL,CAAa,UAAb,EAAyB,KAAzB;AACA,uBAAO,KAAKD,OAAL,CAAaD,IAAb,CAAP;AACH;AACJ,SAhBE,EAiBFG,KAjBE,CAiBIC,OAAO;AACV,mBAAO,KAAKC,IAAL,CAAUD,GAAV,CAAP;AACH,SAnBE,CAAP;AAoBH;AAtBsC,CAA3C",
    "file": "../../../src/logic/front/captchas.js",
    "sourcesContent": [
        "// think.captchas\nconst Geetest = require('gt3-sdk');\n\nthink.captcha = new Geetest({\n    geetest_id: think.config('geetest_id'),\n    geetest_key: think.config('geetest_key')\n});\n\n\nmodule.exports = class extends think.Logic {\n    indexAction() {\n        return think.captcha.register(null)\n            .then(data => {\n                if (!data.success) {\n                    // 进入 fallback，如果一直进入此模式，请检查服务器到极验服务器是否可访问\n                    // 可以通过修改 hosts 把极验服务器 api.geetest.com 指到不可访问的地址\n                    // 为以防万一，你可以选择以下两种方式之一：\n                    // 1. 继续使用极验提供的failback备用方案\n                    this.session('fallback', true);\n                    return this.success(data);\n                    // 2. 使用自己提供的备用方案\n                    // todo\n                } else {\n                    // 正常模式\n                    this.session('fallback', false);\n                    return this.success(data);\n                }\n            })\n            .catch(err => {\n                return this.fail(err);\n            })\n    }\n};\n"
    ]
}