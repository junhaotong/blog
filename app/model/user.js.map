{
    "version": 3,
    "sources": [
        "../../src/model/user.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "Model",
        "relation",
        "token",
        "type",
        "HAS_ONE",
        "getUserByUsername",
        "username",
        "where",
        "find",
        "getUserByToken",
        "join",
        "table",
        "as",
        "on",
        "addUser",
        "user",
        "add",
        "getUserByType",
        "limit",
        "fieldReverse",
        "select",
        "getUserById",
        "id"
    ],
    "mappings": "AAAAA,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,KAApB,CAA0B;AACvC,QAAIC,QAAJ,GAAe;AACX,eAAO;AACHC,mBAAO;AACHC,sBAAMJ,MAAMC,KAAN,CAAYI;AADf;AADJ,SAAP;AAKH;;AAED;;;;;;AAMAC,sBAAkBC,QAAlB,EAA4BH,IAA5B,EAAkC;AAC9B,eAAO,KAAKI,KAAL,CAAW,EAACD,UAAUA,QAAX,EAAqBH,MAAMA,IAA3B,EAAX,EAA6CK,IAA7C,EAAP;AACH;;AAED;;;;AAIAC,mBAAeP,KAAf,EAAsB;AAClB,eAAO,KACFQ,IADE,CACG,CAAC;AACPC,mBAAO,OADA;AAEPD,kBAAM,OAFC;AAGPE,gBAAI,GAHG;AAIPC,gBAAI,CAAC,aAAD,EAAgB,eAAhB;AAJG,SAAD,CADH,EAOFN,KAPE,CAOI,EAAC,WAAWL,KAAZ,EAPJ,EAOwBM,IAPxB,EAAP;AAQH;;AAED;;;;;AAKAM,YAAQC,IAAR,EAAc;AACV,eAAO,KAAKC,GAAL,CAASD,IAAT,CAAP;AACH;;AAED;;;;;AAKAE,kBAAcd,IAAd,EAAoBe,KAApB,EAA2B;AACvB,eAAO,KAAKX,KAAL,CAAW,EAACJ,MAAMA,IAAP,EAAX,EAAyBgB,YAAzB,CAAsC,UAAtC,EAAkDD,KAAlD,CAAwDA,KAAxD,EAA+DE,MAA/D,EAAP;AACH;;AAED;;;;AAIAC,gBAAYC,EAAZ,EAAgB;AACZ,eAAO,KAAKf,KAAL,CAAW,EAACe,IAAIA,EAAL,EAAX,EAAqBd,IAArB,EAAP;AACH;AA1DsC,CAA3C",
    "file": "../../src/model/user.js",
    "sourcesContent": [
        "module.exports = class extends think.Model {\n    get relation() {\n        return {\n            token: {\n                type: think.Model.HAS_ONE\n            }\n        };\n    }\n\n    /**\n     * 通过用户名获取用户\n     * @param username\n     * @param type\n     * @returns {Promise|T}\n     */\n    getUserByUsername(username, type) {\n        return this.where({username: username, type: type}).find();\n    }\n\n    /**\n     * 通过token获取用户\n     * @param token\n     */\n    getUserByToken(token) {\n        return this\n            .join([{\n            table: 'token',\n            join: 'inner',\n            as: 't',\n            on: ['`user`.`id`', '`t`.`user_ID`']\n        }])\n            .where({'t.token': token}).find();\n    }\n\n    /**\n     * 添加用户\n     * @param user\n     * @returns {Promise|*}\n     */\n    addUser(user) {\n        return this.add(user);\n    }\n\n    /**\n     * 通过type查询用户列表\n     * @param type\n     * @param limit\n     */\n    getUserByType(type, limit) {\n        return this.where({type: type}).fieldReverse('password').limit(limit).select();\n    }\n\n    /**\n     * 通过用户ID获取用户信息\n     * @param id\n     */\n    getUserById(id) {\n        return this.where({id: id}).find();\n    }\n};\n"
    ]
}