{
    "version": 3,
    "sources": [
        "../../src/config/middleware.js"
    ],
    "names": [
        "path",
        "require",
        "isDev",
        "qs",
        "module",
        "exports",
        "handle",
        "options",
        "logRequest",
        "sendResponseTime",
        "enable",
        "root",
        "join",
        "think",
        "ROOT_PATH",
        "publicPath",
        "gzip",
        "error",
        "err",
        "ctx",
        "console",
        "match",
        "validator",
        "app",
        "routers",
        "forEach",
        "route",
        "test"
    ],
    "mappings": "AAAA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,QAAQ,IAAd;AACA,MAAMC,KAAKF,QAAQ,UAAR,CAAX;;AAEAG,OAAOC,OAAP,GAAiB,CACb;AACIC,YAAQ,MADZ;AAEIC,aAAS;AACLC,oBAAYN,KADP;AAELO,0BAAkBP;AAFb;AAFb,CADa,EAQb;AACII,YAAQ,UADZ;AAEII,YAAQR,KAFZ;AAGIK,aAAS;AACLI,cAAMX,KAAKY,IAAL,CAAUC,MAAMC,SAAhB,EAA2B,KAA3B,CADD;AAELC,oBAAY,kDAFP;AAGLC,cAAM;AAHD;AAHb,CARa,EAiBb;AACIV,YAAQ,OADZ;AAEI;AACAC,aAAS;AACLU,cAAMC,GAAN,EAAWC,GAAX,EAAgB;AACZ,mBAAOC,QAAQH,KAAR,CAAcC,GAAd,CAAP;AACH;AAHI;AAHb,CAjBa,EA0Bb;AACIZ,YAAQ,SADZ;AAEIC,aAAS;AAFb,CA1Ba,EA8Bb;AACID,YAAQH,EADZ;AAEII,aAAS;AAFb,CA9Ba,EAkCb;AACID,YAAQ,QADZ;AAEIC,aAAS;AAFb,CAlCa,EAsCb;AACID,YAAQ;AADZ,CAtCa,EAyCb;AACIA,YAAQ,eADZ;AAEIe,WAAOF,OAAO;AACV,YAAIG,YAAY,KAAhB;AACAT,cAAMU,GAAN,CAAUC,OAAV,CAAkBC,OAAlB,CAA0BC,SAAS;AAC/B,gBAAIA,MAAML,KAAN,CAAYM,IAAZ,CAAiBR,IAAInB,IAArB,CAAJ,EAAgC;AAC5BsB,4BAAYI,MAAMnB,OAAN,CAAce,SAA1B;AACH;AACJ,SAJD;AAKA,YAAIA,SAAJ,EAAe,OAAO,IAAP,CAAf,KACK,OAAO,KAAP;AACR;AAXL,CAzCa,EAsDb,OAtDa,EAuDb,YAvDa,CAAjB",
    "file": "../../src/config/middleware.js",
    "sourcesContent": [
        "const path = require('path');\nconst isDev = true;\nconst qs = require('think-qs');\n\nmodule.exports = [\n    {\n        handle: 'meta',\n        options: {\n            logRequest: isDev,\n            sendResponseTime: isDev\n        }\n    },\n    {\n        handle: 'resource',\n        enable: isDev,\n        options: {\n            root: path.join(think.ROOT_PATH, 'www'),\n            publicPath: /^\\/(static|front|uploads|favicon.ico|robots.txt)/,\n            gzip: true\n        }\n    },\n    {\n        handle: 'trace',\n        // enable: !think.isCli,\n        options: {\n            error(err, ctx) {\n                return console.error(err);\n            }\n        }\n    },\n    {\n        handle: 'payload',\n        options: {}\n    },\n    {\n        handle: qs,\n        options: {}\n    },\n    {\n        handle: 'router',\n        options: {}\n    },\n    {\n        handle: 'getUser'\n    },\n    {\n        handle: 'validateAdmin',\n        match: ctx => {\n            let validator = false;\n            think.app.routers.forEach(route => {\n                if (route.match.test(ctx.path)) {\n                    validator = route.options.validator;\n                }\n            })\n            if (validator) return true;\n            else return false;\n        }\n    },\n    'logic',\n    'controller'\n];\n"
    ]
}