{
    "version": 3,
    "sources": [
        "../../src/config/middleware.js"
    ],
    "names": [
        "path",
        "require",
        "isDev",
        "module",
        "exports",
        "handle",
        "options",
        "logRequest",
        "sendResponseTime",
        "enable",
        "root",
        "join",
        "think",
        "ROOT_PATH",
        "publicPath",
        "gzip",
        "isCli",
        "debug",
        "match",
        "ctx",
        "validator",
        "app",
        "routers",
        "forEach",
        "route",
        "test"
    ],
    "mappings": "AAAA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,QAAQ,IAAd;;AAEAC,OAAOC,OAAP,GAAiB,CACb;AACIC,YAAQ,MADZ;AAEIC,aAAS;AACLC,oBAAYL,KADP;AAELM,0BAAkBN;AAFb;AAFb,CADa,EAQb;AACIG,YAAQ,UADZ;AAEII,YAAQP,KAFZ;AAGII,aAAS;AACLI,cAAMV,KAAKW,IAAL,CAAUC,MAAMC,SAAhB,EAA2B,KAA3B,CADD;AAELC,oBAAY,wCAFP;AAGLC,cAAM;AAHD;AAHb,CARa,EAiBb;AACIV,YAAQ,OADZ;AAEII,YAAQ,CAACG,MAAMI,KAFnB;AAGIV,aAAS;AACLW,eAAOf;AADF;AAHb,CAjBa,EAwBb;AACIG,YAAQ,SADZ;AAEIC,aAAS;AAFb,CAxBa,EA4Bb;AACID,YAAQ,QADZ;AAEIC,aAAS;AAFb,CA5Ba,EAgCb;AACID,YAAQ,iBADZ;AAEIa,WAAOC,OAAO;AACV,YAAIC,YAAY,KAAhB;AACAR,cAAMS,GAAN,CAAUC,OAAV,CAAkBC,OAAlB,CAA0BC,SAAS;AAC/B,gBAAIA,MAAMN,KAAN,CAAYO,IAAZ,CAAiBN,IAAInB,IAArB,CAAJ,EAAgC;AAC5BoB,4BAAYI,MAAMlB,OAAN,CAAcc,SAA1B;AACH;AACJ,SAJD;AAKA,YAAIA,SAAJ,EAAe,OAAO,IAAP,CAAf,KACK,OAAO,KAAP;AACR;AAXL,CAhCa,EA6Cb,OA7Ca,EA8Cb,YA9Ca,CAAjB",
    "file": "../../src/config/middleware.js",
    "sourcesContent": [
        "const path = require('path');\nconst isDev = true;\n\nmodule.exports = [\n    {\n        handle: 'meta',\n        options: {\n            logRequest: isDev,\n            sendResponseTime: isDev\n        }\n    },\n    {\n        handle: 'resource',\n        enable: isDev,\n        options: {\n            root: path.join(think.ROOT_PATH, 'www'),\n            publicPath: /^\\/(static|front|uploads|favicon\\.ico)/,\n            gzip: true\n        }\n    },\n    {\n        handle: 'trace',\n        enable: !think.isCli,\n        options: {\n            debug: isDev\n        }\n    },\n    {\n        handle: 'payload',\n        options: {}\n    },\n    {\n        handle: 'router',\n        options: {}\n    },\n    {\n        handle: 'validationtoken',\n        match: ctx => {\n            let validator = false;\n            think.app.routers.forEach(route => {\n                if (route.match.test(ctx.path)) {\n                    validator = route.options.validator;\n                }\n            })\n            if (validator) return true;\n            else return false;\n        }\n    },\n    'logic',\n    'controller'\n];\n"
    ]
}