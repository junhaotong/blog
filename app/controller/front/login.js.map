{
    "version": 3,
    "sources": [
        "../../../src/controller/front/login.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "indexAction",
        "captchasController",
        "controller",
        "success",
        "validateCaptchas",
        "username",
        "post",
        "password",
        "userService",
        "service",
        "user",
        "getUserByUsernameOREmail",
        "fail",
        "think",
        "md5",
        "tokenController",
        "token",
        "newToken"
    ],
    "mappings": ";;AAAA,MAAMA,OAAOC,QAAQ,YAAR,CAAb;;AAEAC,OAAOC,OAAP,GAAiB,cAAcH,IAAd,CAAmB;AAC1BI,eAAN,GAAoB;AAAA;;AAAA;AAChB,gBAAIC,qBAAqB,MAAKC,UAAL,CAAgB,gBAAhB,CAAzB;AACA,gBAAIC,UAAU,MAAMF,mBAAmBG,gBAAnB,EAApB;AACA,gBAAID,OAAJ,EAAa;AACT;AACA,oBAAIE,WAAW,MAAKC,IAAL,CAAU,UAAV,CAAf;AACA,oBAAIC,WAAW,MAAKD,IAAL,CAAU,UAAV,CAAf;AACA,oBAAIE,cAAc,MAAKC,OAAL,CAAa,MAAb,CAAlB;AACA,oBAAIC,OAAO,MAAMF,YAAYG,wBAAZ,CAAqCN,QAArC,CAAjB;AACA,oBAAI,CAACK,KAAKL,QAAV,EAAoB;AAChB,2BAAO,MAAKO,IAAL,CAAU,IAAV,EAAgB,OAAhB,CAAP;AACH;AACDL,2BAAWM,MAAMC,GAAN,CAAUP,QAAV,CAAX;AACA,oBAAIA,aAAaG,KAAKH,QAAtB,EAAgC;AAC5B,2BAAO,MAAKK,IAAL,CAAU,IAAV,EAAgB,MAAhB,CAAP;AACH;AACD,oBAAIG,kBAAkB,MAAKb,UAAL,CAAgB,OAAhB,CAAtB;AACA,oBAAIc,QAAQ,MAAMD,gBAAgBE,QAAhB,CAAyBP,IAAzB,CAAlB;AACA,uBAAO,MAAKP,OAAL,CAAa,EAACa,OAAOA,KAAR,EAAb,EAA6B,MAA7B,CAAP;AACH,aAhBD,MAgBO;AACH,uBAAO,MAAKJ,IAAL,CAAU,IAAV,EAAgB,WAAhB,CAAP;AACH;AArBe;AAsBnB;AAvB+B,CAApC",
    "file": "../../../src/controller/front/login.js",
    "sourcesContent": [
        "const Base = require('../base.js');\n\nmodule.exports = class extends Base {\n    async indexAction() {\n        let captchasController = this.controller('front/captchas');\n        let success = await captchasController.validateCaptchas();\n        if (success) {\n            // 验证码二次验证通过\n            let username = this.post('username');\n            let password = this.post('password');\n            let userService = this.service('user');\n            let user = await userService.getUserByUsernameOREmail(username);\n            if (!user.username) {\n                return this.fail(2000, '用户不存在');\n            }\n            password = think.md5(password);\n            if (password !== user.password) {\n                return this.fail(2001, '密码错误');\n            }\n            let tokenController = this.controller('token');\n            let token = await tokenController.newToken(user);\n            return this.success({token: token}, '登录成功');\n        } else {\n            return this.fail(1000, '验证码错误或已失效');\n        }\n    }\n};\n"
    ]
}