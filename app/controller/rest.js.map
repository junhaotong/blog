{
    "version": 3,
    "sources": [
        "..\\..\\src\\controller\\rest.js"
    ],
    "names": [
        "path",
        "require",
        "assert",
        "module",
        "exports",
        "think",
        "Controller",
        "constructor",
        "ctx",
        "resource",
        "getResource",
        "id",
        "getId",
        "isFunction",
        "model",
        "modelInstance",
        "__before",
        "filename",
        "__filename",
        "last",
        "lastIndexOf",
        "sep",
        "substr",
        "length",
        "get",
        "isString",
        "isNumber",
        "split",
        "slice",
        "getAction",
        "data",
        "pk",
        "getPk",
        "where",
        "find",
        "success",
        "select",
        "postAction",
        "post",
        "isEmpty",
        "fail",
        "insertId",
        "add",
        "deleteAction",
        "rows",
        "delete",
        "affectedRows",
        "putAction",
        "update",
        "__call"
    ],
    "mappings": "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",
    "file": "..\\..\\src\\controller\\rest.js",
    "sourcesContent": [
        "const path = require('path');\r\nconst assert = require('assert');\r\n\r\nmodule.exports = class extends think.Controller {\r\n  constructor(ctx) {\r\n    super(ctx);\r\n    this.resource = this.getResource();\r\n    this.id = this.getId();\r\n    assert(think.isFunction(this.model), 'this.model must be a function');\r\n    this.modelInstance = this.model(this.resource);\r\n  }\r\n  __before() {}\r\n  /**\r\n   * get resource\r\n   * @return {String} [resource name]\r\n   */\r\n  getResource() {\r\n    const filename = this.__filename || __filename;\r\n    const last = filename.lastIndexOf(path.sep);\r\n    return filename.substr(last + 1, filename.length - last - 4);\r\n  }\r\n  getId() {\r\n    const id = this.get('id');\r\n    if (id && (think.isString(id) || think.isNumber(id))) {\r\n      return id;\r\n    }\r\n    const last = this.ctx.path.split('/').slice(-1)[0];\r\n    if (last !== this.resource) {\r\n      return last;\r\n    }\r\n    return '';\r\n  }\r\n  async getAction() {\r\n    let data;\r\n    if (this.id) {\r\n      const pk = await this.modelInstance.getPk();\r\n      data = await this.modelInstance.where({[pk]: this.id}).find();\r\n      return this.success(data);\r\n    }\r\n    data = await this.modelInstance.select();\r\n    return this.success(data);\r\n  }\r\n  /**\r\n   * put resource\r\n   * @return {Promise} []\r\n   */\r\n  async postAction() {\r\n    const pk = await this.modelInstance.getPk();\r\n    const data = this.post();\r\n    delete data[pk];\r\n    if (think.isEmpty(data)) {\r\n      return this.fail('data is empty');\r\n    }\r\n    const insertId = await this.modelInstance.add(data);\r\n    return this.success({id: insertId});\r\n  }\r\n  /**\r\n   * delete resource\r\n   * @return {Promise} []\r\n   */\r\n  async deleteAction() {\r\n    if (!this.id) {\r\n      return this.fail('params error');\r\n    }\r\n    const pk = await this.modelInstance.getPk();\r\n    const rows = await this.modelInstance.where({[pk]: this.id}).delete();\r\n    return this.success({affectedRows: rows});\r\n  }\r\n  /**\r\n   * update resource\r\n   * @return {Promise} []\r\n   */\r\n  async putAction() {\r\n    if (!this.id) {\r\n      return this.fail('params error');\r\n    }\r\n    const pk = await this.modelInstance.getPk();\r\n    const data = this.post();\r\n    delete data[pk];\r\n    if (think.isEmpty(data)) {\r\n      return this.fail('data is empty');\r\n    }\r\n    const rows = await this.modelInstance.where({[pk]: this.id}).update(data);\r\n    return this.success({affectedRows: rows});\r\n  }\r\n  __call() {\r\n\r\n  }\r\n};\r\n"
    ]
}